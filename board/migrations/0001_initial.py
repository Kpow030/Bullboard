# Generated by Django 5.0.7 on 2024-08-09 06:30

import ckeditor_uploader.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Advert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=20, unique=True)),
                ('text', models.TextField()),
                ('dateCreation', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, verbose_name='Название объявления')),
                ('text', models.TextField(verbose_name='Описание объявления')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('category', models.CharField(choices=[('tank', 'Танк (Warrior)'), ('heal', 'Хилы (Healer)'), ('dd', 'ДД (Damage Dealer)'), ('buyers', 'Торговцы (Merchant)'), ('gildmaster', 'Гилдмастеры (Guild Leader)'), ('quest', 'Квестгиверы (Quest Giver)'), ('smith', 'Кузнецы (Blacksmith)'), ('tanner', 'Кожевники (Leatherworker)'), ('potion', 'Зельевары (Alchemist)'), ('spellmaster', 'Мастера заклинаний (Mage)')], default='tank', max_length=16, verbose_name='Роль')),
                ('dateCreation', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('upload', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Приложенный файл')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор публикации')),
            ],
            options={
                'verbose_name': 'announcement',
                'verbose_name_plural': 'announcements',
                'ordering': ['-dateCreation'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('dateCreation', models.DateTimeField(auto_now_add=True)),
                ('rating', models.SmallIntegerField(default=0)),
                ('commentArticle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='board.article')),
                ('commentUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='board.article')),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='board.article')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('status', models.BooleanField(default=False)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='board.article')),
                ('author', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
